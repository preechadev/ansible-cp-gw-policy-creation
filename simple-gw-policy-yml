---
- name: playbook name
  hosts: check_point
  connection: httpapi

  # Add or Delete access and NAT rules from here (present / absent)
  vars:
    state: present

  tasks:
  # Include all the variables
  - include_vars: my_variables.yml

  # Create multiple network objects using loop, variables are from my_variables.yml
  - name: task to have network 
    check_point.mgmt.cp_mgmt_network:
      name: "{{ item.name }}"
      subnet: "{{ item.subnet }}"
      mask_length: "{{ item.mask }}"
      auto_publish_session: true
    loop: "{{ networks }}"


  # Create multiple network objects using loop
  # - name: task to have network
  #   check_point.mgmt.cp_mgmt_network:
  #     name: "{{ item.name }}"
  #     subnet: "{{ item.subnet }}"
  #     mask_length: "{{ item.mask }}"
  #     auto_publish_session: true
  #   loop:
  #   - { name: 'net01_test', subnet: '10.10.10.0', mask: '24' }
  #   - { name: 'net02_test', subnet: '10.10.20.0', mask: '24' }
  #   - { name: 'net03_test', subnet: '10.10.30.0', mask: '24' }


  # Create a simple network object called MaliciousIPs
  - name: task to have network
    check_point.mgmt.cp_mgmt_network:
      name: "MaliciousIPs"
      subnet: "203.14.65.0"
      mask_length: 24
      auto_publish_session: true


  # Create a simple gateway with 2 interfaces
  - name: add-simple-gateway
    check_point.mgmt.cp_mgmt_simple_gateway:
      ip_address: 10.10.10.10
      name: gw1
      anti_bot: true
      anti_virus: true
      application_control: true
      ips: true
      interfaces:
      - anti_spoofing: false
        ipv4_address: 10.10.10.10
        ipv4_mask_length: 24
        name: eth0
        topology: external
      - anti_spoofing: false
        ipv4_address: 10.20.20.20
        ipv4_mask_length: 24
        name: eth1
        topology: internal
      state: present
      auto_publish_session: true

  - name: add-simple-cluster
    check_point.mgmt.cp_mgmt_simple_cluster:
      cluster_mode: cluster-xl-ha
      color: yellow
      firewall: true
      anti_bot: true
      anti_virus: true
      interfaces:
      - anti_spoofing: true
        interface_type: cluster
        ip_address: 17.23.5.1
        name: eth0
        network_mask: 255.255.255.0
        topology: external
      - interface_type: sync
        name: eth1
        topology: internal
        topology_settings:
          interface_leads_to_dmz: false
          ip_address_behind_this_interface: network defined by the interface ip and net
            mask
      - anti_spoofing: true
        interface_type: cluster
        ip_address: 192.168.1.1
        name: eth2
        network_mask: 255.255.255.0
        topology: internal
        topology_settings:
          interface_leads_to_dmz: false
          ip_address_behind_this_interface: network defined by the interface ip and net
            mask
      ip_address: 17.23.5.1
      members:
      - interfaces:
        - ip_address: 17.23.5.2
          name: eth0
          network_mask: 255.255.255.0
        - ip_address: 1.1.2.4
          name: eth1
          network_mask: 255.255.255.0
        - ip_address: 192.168.1.2
          name: eth2
          network_mask: 255.255.255.0
        ip_address: 17.23.5.2
        name: member1
        one_time_password: abcd
      - interfaces:
        - ip_address: 17.23.5.3
          name: eth0
          network_mask: 255.255.255.0
        - ip_address: 1.1.2.5
          name: eth1
          network_mask: 255.255.255.0
        - ip_address: 192.168.1.3
          name: eth2
          network_mask: 255.255.255.0
        ip_address: 17.23.5.3
        name: member2
        one_time_password: abcd
      name: cluster1
      os_name: Gaia
      state: present
      cluster_version: R81.20
      auto_publish_session: true

  # Create a new policy package 
  - name: add-package
    check_point.mgmt.cp_mgmt_package:
      access: true
      color: blue
      comments: NewPolicy
      name: New_Standard_Package_1
      state: present
      threat_prevention: true
      auto_publish_session: true

  # This has issue with the module itself, waiting for RnD to investigate
  # - name: add-rules-batch
  #   check_point.mgmt.cp_mgmt_add_rules_batch:
  #     objects:
  #     - first_position: top
  #       layer: New_Standard_Package_1
  #       list:
  #       - action: accept
  #         name: access rule 1
  #       - action: accept
  #         name: access rule 2
  #       type: access-rule

  # Use this to add multiple rules is good but the issue with this, if the playbook is executed again
  # It will cause the module error....!
  - name: add-access-rules
    check_point.mgmt.cp_mgmt_access_rules:
      rules:
        - name: Rule 1
          source: net01_test
          destination: net03_test
          service:
          - SMTP
          - AOL
          action: Accept
          state: "{{ state }}"
        - name: Rule 2
          source: net03_test
          destination: net01_test
          service:
          - SMTP
          action: Reject
          state: "{{ state }}"
      layer: New_Standard_Package_1 Network
      auto_publish_session: true

  # Add a rule on top of to block inbound from specific IPs
  - name: add-access-rule
    check_point.mgmt.cp_mgmt_access_rule:
      layer: New_Standard_Package_1 Network
      position: top
      name: MaliciousBlock
      source: MaliciousIPs
      destination: Any
      service:
      - Any
      action: Drop
      state: "{{ state }}"
      auto_publish_session: true

  # Add multiple sections for the access rules
  - name: add-access-section
    check_point.mgmt.cp_mgmt_access_section:
      layer: New_Standard_Package_1 Network
      name: Malicious Block
      position: 1
      state: "{{ state }}"
      auto_publish_session: true

  - name: add-access-section
    check_point.mgmt.cp_mgmt_access_section:
      layer: New_Standard_Package_1 Network
      name: Allow SMTP and AOL traffic internally
      position: 2
      state: "{{ state }}"
      auto_publish_session: true

  - name: add-access-section
    check_point.mgmt.cp_mgmt_access_section:
      layer: New_Standard_Package_1 Network
      name: Drop SMTP between networks
      position: 3
      state: "{{ state }}"
      auto_publish_session: true

  - name: add-access-section
    check_point.mgmt.cp_mgmt_access_section:
      layer: New_Standard_Package_1 Network
      name: Clean Up
      position: 4
      state: "{{ state }}"

  # Add a simple NAT rule
  # Position in the rulebase. The use of values “top” and “bottom” may not be idempotent.
  - name: add-nat-rule
    check_point.mgmt.cp_mgmt_nat_rule:
      name: NATexample1
      comments: NATexample1
      enabled: true
      install_on:
      - Policy Targets
      original_destination: All_Internet
      original_source: net01_test
      package: New_Standard_Package_1
      method: hide
      position: top
      state: "{{ state }}"
      auto_publish_session: true

  # Add section for manual NAT
  - name: add-nat-section
    check_point.mgmt.cp_mgmt_nat_section:
      name: ManualNAT
      package: New_Standard_Package_1
      position: top
      state: "{{ state }}"
      auto_publish_session: true

  # - name: install-database
  #   check_point.mgmt.cp_mgmt_install_database:
  #     targets:
  #     - mgmt-aws

